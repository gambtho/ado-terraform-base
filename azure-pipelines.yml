# Azure Pipeline.

name: $(Date:yyyyMMdd).$(Rev:.r)
trigger:
  batch: true
  branches:
    include:
    - master

stages: 
  - stage: dev
    variables:
      - group: dev_terraform
    displayName: dev  
    jobs: 
    - job: init
      pool:
        vmImage: 'ubuntu-16.04' # Other options: 'macOS-10.13', 'vs2017-win2016'
      steps:
      - task: DownloadSecureFile@1
        inputs:
          secureFile: $(env).auto.tfvars
      - script: terraform fmt -check=true
        displayName: Check terraform is formatted correctly
      - bash: ln -s $(Agent.TempDirectory)/$(env).auto.tfvars ./$(env).auto.tfvars 
        displayName: place variables 
      - task: AzureCLI@1
        displayName: Init
        inputs:
          azureSubscription: $(azure_sub)
          scriptLocation: 'scriptPath' # Options: inlineScript, scriptPath
          scriptPath: ./init.sh
          arguments: -e $(env) -c $(cluster_name)
      - task: PublishPipelineArtifact@1
        inputs:
          path: $(System.DefaultWorkingDirectory)/.terraform
          artifactName: init
      - bash: rm -rf ./$(env).auto.tfvars 
        displayName: remove variables 
    - job: plan
      dependsOn: init
      pool:
        vmImage: 'ubuntu-16.04' # Other options: 'macOS-10.13', 'vs2017-win2016'
      steps:
      - task: DownloadSecureFile@1
        inputs:
          secureFile: $(env).auto.tfvars
      - bash: mkdir .terraform
        displayName: init landing location
      - task: DownloadPipelineArtifact@2
        inputs:
          artifact: init
          path: $(System.DefaultWorkingDirectory)/.terraform
      - bash: ln -sf $(Agent.TempDirectory)/$(env).auto.tfvars ./$(env).auto.tfvars 
        displayName: place variables 
      - bash: chmod +x .terraform/plugins/linux_amd64/*.*
        displayName: plugin permissions
      - task: AzureCLI@1
        displayName: Plan 
        inputs:
          azureSubscription:  $(azure_sub)
          scriptLocation: 'scriptPath' # Options: inlineScript, scriptPath
          scriptPath: ./plan.sh
          arguments: -e $(env) -c $(cluster_name)
      - task: PublishPipelineArtifact@1
        inputs:
          path: $(System.DefaultWorkingDirectory)/$(env).plan
          artifactName: plan
    - job: Deploy
      dependsOn: plan
      pool:
        vmImage: 'ubuntu-16.04' # Other options: 'macOS-10.13', 'vs2017-win2016'
      steps:
      - bash: mkdir .terraform
        displayName: init landing location
      - task: DownloadPipelineArtifact@2
        inputs:
          artifact: init
          path: $(System.DefaultWorkingDirectory)/.terraform
      - bash: chmod +x .terraform/plugins/linux_amd64/*.*
        displayName: plugin permissions
      - task: DownloadPipelineArtifact@2
        inputs:
          artifact: plan
          path: $(System.DefaultWorkingDirectory)
      - task: AzureCLI@1
        displayName: Apply 
        inputs:
          azureSubscription:  $(azure_sub)
          scriptLocation: 'scriptPath' # Options: inlineScript, scriptPath
          scriptPath: ./apply.sh
          arguments: -e $(env) 





